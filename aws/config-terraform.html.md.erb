---
title: Configuring BOSH Director on AWS Using Terraform
owner: Ops Manager
iaas: AWS
install_type: terraform
---

<strong><%= modified_date %></strong>

This topic describes how to configure the BOSH Director tile in Ops Manager on
Amazon Web Services (AWS) after [Deploying Ops Manager on AWS Using Terraform](./prepare-env-terraform.html).

<p class="note"><strong>Note:</strong> You can also perform the procedures in this topic using the Ops Manager API. For more information, see the <a href="https://docs.pivotal.io/pivotalcf/<%= product_info['local_product_version'].to_s.sub('.','-') %>/customizing/ops-man-api.html">Using the Ops Manager API</a> topic.</p>


## <a id='prereq'></a> Prerequisites

To complete the procedures in this topic, you must have access to the output from when you ran `terraform apply` to create resources for this deployment. You can view this output at any time by running `terraform output`. You use the values in your Terraform output to configure the BOSH Director tile.


## <a id='access-om'></a> Step 1: Access Ops Manager

1. In a web browser, navigate to the fully qualified domain name (FQDN) of Ops Manager. Use the `ops_manager_dns` value from running `terraform output`.

1. When Ops Manager starts for the first time, you must choose one of the following:
    * [Internal Authentication](#internal): If you use Internal Authentication, Ops Manager maintains your user database.
    * [SAML Identity Provider](#saml): If you use a SAML Identity Provider (IdP), an external identity server maintains your user database.
    * [LDAP Server](#ldap): If you use a LDAP Server, an external identity server maintains your user database.

    <%= image_tag("../common/images/select-authentication.png") %>

### <a id='internal'></a> Internal Authentication

1.  When redirected to the **Internal Authentication** page, do the following:
    * Enter a **Username**, **Password**, and **Password confirmation** to create an Admin user.
    * Enter a **Decryption passphrase** and the **Decryption passphrase confirmation**. This passphrase encrypts the Ops Manager datastore, and is not recoverable.
    * If you are using an **HTTP proxy** or **HTTPS proxy**, follow the instructions in the [Configuring Proxy Settings for the BOSH CPI](https://docs.pivotal.io/pivotalcf/<%= product_info['local_product_version'].to_s.sub('.','-') %>/customizing/pcf-director-proxy-settings.html) topic.
    * Read the **End User License Agreement**, and select the checkbox to accept the terms.
    * Click **Setup Authentication**.

    <%= image_tag("../common/images/om-login.png") %>

1. Log in to Ops Manager with the Admin *username and password you created in the previous step.

    <%= image_tag("../common/images/cf-login.png") %>
`*` The prompt for username could actually say "email" as this field is customizable.
### <a id='saml'></a> SAML Identity Provider

<%= partial '../common/using_saml_idp_ops_manager' %>

### <a id='ldap'></a> LDAP Server

<%= partial '../common/using_ldap_server_ops_manager' %>

## <a id='aws-config'></a> Step 2: AWS Config Page

1. Click the **BOSH Director** tile.

    <%= image_tag("../common/images/aws/director-tile-aws.png") %>

1. Select **AWS Config** to open the **AWS Management Console Config** page.

    <%= image_tag("../common/images/cloudform/aws-config.png") %>

1. Select **Use AWS Keys** or **Use AWS Instance Profile**.
    * If you choose to use AWS keys, complete the following fields:
        * **Access Key ID**: Enter the value of `ops_manager_iam_user_access_key` from the Terraform output.
        * **AWS Secret Key**: Enter the value of `ops_manager_iam_user_secret_key` from the Terraform output.
    * If you choose to use an AWS instance profile, enter the name of your AWS Identity and Access Management (IAM) profile.

1. Complete the remainder of the **AWS Management Console Config** page with the following information.
    * **Security Group ID**: Enter the value of `vms_security_group_id` from the Terraform output.
    * **Key Pair Name**: Enter the value of `ops_manager_ssh_public_key_name` from the Terraform output.
    * **SSH Private Key**: Run `terraform output` to view the value of `ops_manager_ssh_private_key`	and enter it into this field. `ops_manager_ssh_private_key` is a `sensitive` value and does not display when you run `terraform apply`.
    * **Region**: Select the region where you deployed Ops Manager.
    * **Encrypt Linux EBS Volumes**: Select this checkbox to enable full encryption
      on persistent disks of all BOSH-deployed VMs, except
      for the Ops Manager VM and BOSH Director VM. See the [Configuring Amazon EBS Encryption](https://docs.pivotal.io/pivotalcf/<%= product_info['local_product_version'].to_s.sub('.','-') %>/customizing/cloudform-om-ebs-config.html) topic for
      details about using Elastic Block Store (EBS) encryption.
      <p class="note"><strong>Note</strong>: Enabling EBS encryption only encrypts Linux VMs. The Windows VMs deployed with Pivotal Application Service for Windows (PASW) are not encrypted.</p>
      * **Custom Encryption Key (Optional)** Once you enable EBS encryption, you may want to specify a custom Key Management Service (KMS) encryption key. If you don't enter a value, your custom encryption key will default to the account key. For more information, see [Configuring Amazon EBS Encryption](https://docs.pivotal.io/pivotalcf/<%= product_info['local_product_version'].to_s.sub('.','-') %>/customizing/cloudform-om-ebs-config.html).

1. Click **Save**.


## <a id='director-config'></a> Step 3: Director Config Page

<%= partial "../common/director-config" %>
<p class="note"><strong>Note:</strong> For more information about AWS S3 Signatures, see the AWS <a href="http://docs.aws.amazon.com/AmazonS3/latest/API/sig-v4-authenticating-requests.html">Authenticating Requests</a> documentation.</p>


## <a id='az'></a> Step 4: Create Availability Zones Page

1. Select **Create Availability Zones**.

    <%= image_tag("../common/images/cloudform/create-az.png") %>

1. To create three Availability Zones for your apps to use, do the following:
    1. Click **Add** three times.
    1. For **Amazon Availability Zone**, enter the values corresponding
    to the key `infrastucture_subnet_availability_zones` from the Terraform output.
    1. Click **Save**.


## <a id='network'></a> Step 5: Create Networks Page

1. Select **Create Networks**.
<%= image_tag("../common/images/cloudform/create-networks.png") %>

1. (Optional) Select **Enable ICMP checks** to enable ICMP on your networks. Ops Manager uses ICMP checks to confirm that components within your network are reachable.

1. To add the network configuration you created for your VPC, do the following:
  1. Click **Add Network**.
  1. For **Name**, enter `infrastructure`.
  1. Create a subnet for each availability zone by clicking **Add Subnet**. Refer to the table below for the information required to create all three subnets:
    <table>
      <tr>
        <th rowspan="7">First<br>Subnet</th>
      </tr>
      <tr>
        <th>VPC Subnet ID</th>
        <td>The first value of <code>infrastructure_subnet_ids</code> from the Terraform output.</td>
      </tr>
      <tr>
        <th>CIDR</th>
        <td><code>10.0.16.0/28</code></td>
      </tr>
      <tr>
        <th>Reserved IP Ranges</th>
        <td><code>10.0.16.0-10.0.16.4</code></td>
      </tr>
      <tr>
        <th>DNS</th>
        <td><code>10.0.0.2</code>\*</td>
      </tr>
      <tr>
        <th>Gateway</th>
        <td><code>10.0.16.1</code></td>
      </tr>
      <tr>
        <th>Availability Zones</th>
        <td>The first value of <code>infrastructure_subnet_availability_zones</code> from the Terraform output.</td>
      </tr>
       <tr>
        <th rowspan="7">Second<br>Subnet</th>
      </tr>
      <tr>
        <th>VPC Subnet ID</th>
        <td>The second value of <code>infrastructure_subnet_ids</code> from the Terraform output.</td>
      </tr>
      <tr>
        <th>CIDR</th>
        <td><code>10.0.16.16/28</code></td>
      </tr>
      <tr>
        <th>Reserved IP Ranges</th>
        <td><code>10.0.16.16-10.0.16.20</code></td>
      </tr>
      <tr>
        <th>DNS</th>
        <td><code>10.0.0.2</code>\*</td>
      </tr>
      <tr>
        <th>Gateway</th>
        <td><code>10.0.16.17</code></td>
      </tr>
      <tr>
        <th>Availability Zones</th>
        <td>The second value of <code>infrastructure_subnet_availability_zones</code> from the Terraform output.</td>
      </tr>
      <tr>
        <th rowspan="7">Third<br>Subnet</th>
      </tr>
      <tr>
        <th>VPC Subnet ID</th>
        <td>The third value of <code>infrastructure_subnet_ids</code> from the Terraform output.</td>
      </tr>
      <tr>
        <th>CIDR</th>
        <td><code>10.0.16.32/28</code></td>
      </tr>
      <tr>
        <th>Reserved IP Ranges</th>
        <td><code>10.0.16.32-10.0.16.36</code></td>
      </tr>
      <tr>
        <th>DNS</th>
        <td><code>10.0.0.2</code>\*</td>
      </tr>
      <tr>
        <th>Gateway</th>
        <td><code>10.0.16.33</code></td>
      </tr>
      <tr>
        <th>Availability Zones</th>
        <td>The third value of <code>infrastructure_subnet_availability_zones</code> from the Terraform output.</td>
      </tr>
    </table>
    \* If you set a VPC CIDR other than recommended, enter the second IP in your VPC CIDR. For example, for a `10.0.0.0/24` VPC CIDR, enter `10.0.0.2` in each subnet.
  <br><br>
  1. Click **Add Network**.
  1. For **Name**, enter the name of your runtime. For example, `pas` or `pks`.
  1. Create a subnet for each availability zone by clicking **Add Subnet**. Refer to the table below for the information required to create all three subnets:
    <table>
      <tr>
        <th rowspan="7">First<br>Subnet</th>
      </tr>
      <tr>
        <th>VPC Subnet ID</th>
        <td>The first value of <code>RUNTIME_subnet_ids</code> from the Terraform output, where <code>RUNTIME</code> is either <code>pas</code> or <code>pks</code>.</td>
      </tr>
      <tr>
        <th>CIDR</th>
        <td><code>10.0.4.0/24</code></td>
      </tr>
      <tr>
        <th>Reserved IP Ranges</th>
        <td><code>10.0.4.0-10.0.4.4</code></td>
      </tr>
      <tr>
        <th>DNS</th>
        <td><code>10.0.0.2</code>\*</td>
      </tr>
      <tr>
        <th>Gateway</th>
        <td><code>10.0.4.1</code></td>
      </tr>
      <tr>
        <th>Availability Zones</th>
        <td>The first value of <code>RUNTIME_subnet_availability_zones</code> from the Terraform output.</td>
      </tr>
       <tr>
        <th rowspan="7">Second<br>Subnet</th>
      </tr>
      <tr>
        <th>VPC Subnet ID</th>
        <td>The second value of <code>RUNTIME_subnet_ids</code> from the Terraform output.</td>
      </tr>
      <tr>
        <th>CIDR</th>
        <td><code>10.0.5.0/24</code></td>
      </tr>
      <tr>
        <th>Reserved IP Ranges</th>
        <td><code>10.0.5.0-10.0.5.4</code></td>
      </tr>
      <tr>
        <th>DNS</th>
        <td><code>10.0.0.2</code>\*</td>
      </tr>
      <tr>
        <th>Gateway</th>
        <td><code>10.0.5.1</code></td>
      </tr>
      <tr>
        <th>Availability Zones</th>
        <td>The second value of <code>RUNTIME_subnet_availability_zones</code> from the Terraform output.</td>
      </tr>
      <tr>
        <th rowspan="7">Third<br>Subnet</th>
      </tr>
      <tr>
        <th>VPC Subnet ID</th>
        <td>The third value of <code>RUNTIME_subnet_ids</code> from the Terraform output.</td>
      </tr>
      <tr>
        <th>CIDR</th>
        <td><code>10.0.6.0/24</code></td>
      </tr>
      <tr>
        <th>Reserved IP Ranges</th>
        <td><code>10.0.6.0-10.0.6.4</code></td>
      </tr>
      <tr>
        <th>DNS</th>
        <td><code>10.0.0.2</code>\*</td>
      </tr>
      <tr>
        <th>Gateway</th>
        <td><code>10.0.6.1</code></td>
      </tr>
      <tr>
        <th>Availability Zones</th>
        <td>The third value of <code>RUNTIME_subnet_availability_zones</code> from the Terraform output.</td>
      </tr>
    </table>
    \* If you set a VPC CIDR other than recommended, enter the second IP in your VPC CIDR. For example, for a `10.0.0.0/24` VPC CIDR, enter `10.0.0.2` in each subnet.
  <br><br>
  1. Click **Add Network**.
  1. For **Name**, enter `services`.
  1. Create a subnet for each availability zone by clicking **Add Subnet**. Refer to the table below for the information required to create all three subnets:
    <table>
      <tr>
        <th rowspan="7">First<br>Subnet</th>
      </tr>
      <tr>
        <th>VPC Subnet ID</th>
        <td>The first value of <code>services_subnet_ids</code> from the Terraform output.</td>
      </tr>
      <tr>
        <th>CIDR</th>
        <td><code>10.0.8.0/24</code></td>
      </tr>
      <tr>
        <th>Reserved IP Ranges</th>
        <td><code>10.0.8.0-10.0.8.3</code></td>
      </tr>
      <tr>
        <th>DNS</th>
        <td><code>10.0.0.2</code>\*</td>
      </tr>
      <tr>
        <th>Gateway</th>
        <td><code>10.0.8.1</code></td>
      </tr>
      <tr>
        <th>Availability Zones</th>
        <td>The first value of <code>services_subnet_availability_zones</code> from the Terraform output.</td>
      </tr>
       <tr>
        <th rowspan="7">Second<br>Subnet</th>
      </tr>
      <tr>
        <th>VPC Subnet ID</th>
        <td>The second value of <code>services_subnet_ids</code> from the Terraform output.</td>
      </tr>
      <tr>
        <th>CIDR</th>
        <td><code>10.0.9.0/24</code></td>
      </tr>
      <tr>
        <th>Reserved IP Ranges</th>
        <td><code>10.0.9.0-10.0.9.3</code></td>
      </tr>
      <tr>
        <th>DNS</th>
        <td><code>10.0.0.2</code>\*</td>
      </tr>
      <tr>
        <th>Gateway</th>
        <td><code>10.0.9.1</code></td>
      </tr>
      <tr>
        <th>Availability Zones</th>
        <td>The second value of <code>services_subnet_availability_zones</code> from the Terraform output.</td>
      </tr>
      <tr>
        <th rowspan="7">Third<br>Subnet</th>
      </tr>
      <tr>
        <th>VPC Subnet ID</th>
        <td>The third value of <code>services_subnet_ids</code> from the Terraform output.</td>
      </tr>
      <tr>
        <th>CIDR</th>
        <td><code>10.0.10.0/24</code></td>
      </tr>
      <tr>
        <th>Reserved IP Ranges</th>
        <td><code>10.0.10.0-10.0.10.3</code></td>
      </tr>
      <tr>
        <th>DNS</th>
        <td><code>10.0.0.2</code>\*</td>
      </tr>
      <tr>
        <th>Gateway</th>
        <td><code>10.0.10.1</code></td>
      </tr>
      <tr>
        <th>Availability Zones</th>
        <td>The third value of <code>services_subnet_availability_zones</code> from the Terraform output.</td>
      </tr>
    </table>
    \* If you set a VPC CIDR other than recommended, enter the second IP in your VPC CIDR. For example, for a `10.0.0.0/24` VPC CIDR, enter `10.0.0.2` in each subnet.

1. Click **Save**.

    <p class="note"><strong>Note</strong>&#58; If you are deploying <%= vars.pks_product_full %> with a <%= vars.pks_product_short %> workload load balancer,
    you must tag each AWS subnet with your <%= vars.pks_product_short %> Kubernetes cluster unique identifier before you create the load balancer. 
    For more information about tagging subnets with a <%= vars.pks_product_short %> cluster unique identifier, 
    see <a href="https://docs.pivotal.io/runtimes/pks/deploy-workloads.html#aws">AWS Prerequisites</a>.</p>

    <%= vars.expand_network_azs %>

## <a id="assign-azs"></a> Step 6: Assign AZs and Networks Page

1. Select **Assign AZs and Networks**.

1. Use the dropdown to select a **Singleton Availability Zone**. The BOSH Director installs in this availability zone (AZ).

1. Use the dropdown to select the `infrastructure` network for your BOSH Director.

1. Click **Save**.


## <a id='security'></a> Step 7: Security Page

<%= partial "../common/security-pane" %>

## <a id="bosh-dns"></a> Step 8: BOSH DNS Config Page

<%= partial '../common/bosh-dns-config'  %>

## <a id='syslog'></a> Step 9: Syslog Page

<%= partial '../common/syslog_bosh' %>

## <a id='pcfaws-om-rscestem'></a> Step 10: Resource Config Page

1. Select **Resource Config**.
    <%= image_tag("../common/images/cloudform/resource-config-new.png") %>

1. Adjust any values as necessary for your deployment. Under the **Instances**, **Persistent Disk Type**, and **VM Type** fields, choose **Automatic** from the dropdown to allocate the recommended resources for the job. If the **Persistent Disk Type** field reads **None**, the job does not require persistent disk space.
    <p class="note"><strong>Note:</strong> Pivotal recommends provisioning a BOSH Director VM with at least 8&nbsp;GB memory.</p>
    <p class="note"><strong>Note:</strong> If you set a field to <strong>Automatic</strong> and the recommended resource allocation changes in a future version, Ops Manager automatically uses the new recommended allocation.</p>
    <p class="note"><strong>Note:</strong> If you install PASW, provision your <strong>Master Compilation Job</strong>
    with at least 100&nbsp;GB of disk space.

1. (Optional) Enter your AWS target group name in the **Load Balancers** column for each job. Prepend the name with `alb:`. For example, enter `alb:target-group-name`.

    To create an Application Load Balancer (ALB) and target group, follow the procedures in [Getting Started with Application Load Balancers](https://docs.aws.amazon.com/elasticloadbalancing/latest/application/application-load-balancer-getting-started.html) in the AWS documentation. Then navigate to **Target Groups** in the **EC2 Dashboard** menu to find your target group **Name**.
    <div class="note">
      <p><strong>Note:</strong> To configure an ALB, you must have the following AWS IAM permissions.</p>
      <pre>"elasticloadbalancing:DescribeLoadBalancers",
"elasticloadbalancing:DeregisterInstancesFromLoadBalancer",
"elasticloadbalancing:RegisterInstancesWithLoadBalancer",
"elasticloadbalancing:DescribeTargetGroups",
"elasticloadbalancing:RegisterTargets"</pre>
    </div>

1. Click **Save**.


## <a id="custom-vm-extensions"></a> Step 11: (Optional) Add Custom VM Extensions

<%= partial "../common/vm-extension-config"  %>

## <a id='complete'></a> Step 11: Complete the BOSH Director Installation

1. Click the **Installation Dashboard** link to return to the Installation Dashboard.

1. Click **Review Pending Changes**, then **Apply Changes**. If the following ICMP error message appears, click **Ignore errors and start the install**.

    <%= image_tag("../common/images/cloudform/install-error.png") %>

1. BOSH Director installs. This may take a few moments. When the installation process successfully completes, the **Changes Applied** window appears.

    <%= image_tag("../common/images/cloudform/ops-manager-complete.png") %>

1. After you complete this procedure, continue to the topic for the runtime you are installing:
  * **PAS**: [Configuring PAS](https://docs.pivotal.io/pivotalcf/<%= product_info['local_product_version'].to_s.sub('.','-') %>/customizing/configure-pas.html)
  * **<%= vars.pks_product_short %> v1.2**: [Installing <%= vars.pks_product_short %> on AWS](https://docs.pivotal.io/runtimes/pks/1-2/installing-pks-aws.html)
  * **<%= vars.pks_product_short %> v1.3**: [Installing <%= vars.pks_product_short %> on AWS](https://docs.pivotal.io/runtimes/pks/1-3/installing-pks-aws.html)

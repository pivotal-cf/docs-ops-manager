---
title: Advanced Tanzu Operations Manager troubleshooting with BOSH CLI
owner: Ops Manager
---

You can use the BOSH CLI to help diagnose and resolve issues with your
<%= vars.ops_manager_first %> deployment. Before using the information and techniques in this topic,
review [Diagnosing <%= vars.app_runtime_abbr %> deployment problems](https://docs.vmware.com/en/VMware-Tanzu-Application-Service/<%= vars.dot_major_tas_version %>/tas-for-vms/diagnostics.html).

To follow the steps in this topic, you must log in to the BOSH Director VM. The BOSH Director runs
on the virtual machine (VM) that <%= vars.ops_manager %> deploys on the first install of the BOSH
Director tile.

After you authenticate in to the BOSH Director, you can run specific commands using the BOSH Command
Line Interface (BOSH CLI). BOSH Director diagnostic commands have access to information about your
entire <%= vars.ops_manager %> installation.

<p> Before you run any BOSH CLI commands, verify that no BOSH
  Director tasks are running on the <%= vars.ops_manager %> VM. For more information, see
  <a href="https://bosh.io/docs/cli-v2#task-mgmt">Tasks</a> in <em>BOSH CLI commands</em>
  in the BOSH documentation.</p>

## <a id='gather'></a> Gather credential and IP address information

Before you begin troubleshooting with the BOSH CLI, follow these instructions to collect the information you
need from the <%= vars.ops_manager %> interface:

1. Open the <%= vars.ops_manager %> interface by going to the <%= vars.ops_manager %>
fully qualified domain name (FQDN) in a web browser.

1. Click the **BOSH Director** tile and click the **Status** tab.

1. Record the IP address for the Director job. This is the IP address of the VM where the BOSH
Director runs.

    ![alt-text=""](images/ops-mgr-job-ip.png)

1. Click the **Credentials** tab.

2. Next to **Director Credentials**, click **Link to Credential**. Record these credentials.

    ![alt-text=""](images/bosh-creds.png)

3. Return to the <%= vars.ops_manager %> Installation Dashboard.

4. **(Optional)** To prepare to troubleshoot the job VM for any other product, click the product
tile and repeat the procedure above to record the IP address and VM credentials for that job VM.

1. Log out of <%= vars.ops_manager %>.

<p> Ensure that there are no <%= vars.ops_manager %>
  installations or updates in progress while using the BOSH CLI.</p>

## <a id='ssh'></a> Log in to the <%= vars.ops_manager %> VM with SSH

<%= partial "../common/ssh-to-om" %>

## <a id='log-in'></a> Authenticate with the BOSH Director VM

To authenticate with BOSH, use one of the following methods:

* [Set the BOSH environment variables on the <%= vars.ops_manager %> VM](#export-bosh-envs).
* [Create a local BOSH Director alias](#bosh-alias).

### <a id='export-bosh-envs'></a> Set the BOSH environment variables on the <%= vars.ops_manager %> VM

If you have access to the <%= vars.ops_manager %> VM, SSH into the <%= vars.ops_manager %> VM
and do the following:

1. Record the **Bosh Commandline Credentials** from the **Credentials** tab of the BOSH Director tile.

1. SSH into the <%= vars.ops_manager %> VM. For more information, see [Log in to the <%= vars.ops_manager %> VM with SSH](#ssh) above.

1. Export all the environment variables by running the following command:

    ```
    export YOUR-ENV-VARIABLES
    ```

    Where `YOUR-ENV-VARIABLES` is the value for `credential` in the BOSH command line credentials
    that you recorded in a previous step.

    For example:

    <pre class="terminal">
    $ export BOSH_CLIENT=ops_manager \
    BOSH_CLIENT_SECRET=some_secret \
    BOSH_CA_CERT=/var/tempest/workspaces/default/root_ca_certificate \
    BOSH_ENVIRONMENT=10.0.0.5 bosh
    </pre>

1. Verify that BOSH access works by running the following command.

    ```
    bosh deployments
    ```

### <a id='bosh-alias'></a> Create a local BOSH Director alias

To create a BOSH Director alias and log in to the BOSH Director VM:

1. Run the following command to create a local alias for the BOSH Director using the BOSH CLI:

    ```
    bosh alias-env MY-ENV -e DIRECTOR-IP-ADDRESS --ca-cert /var/tempest/workspaces/default/root_ca_certificate
    ```

    Where:

    * `MY-ENV`: Enter an alias for the BOSH Director, such as `gcp`.
    * `DIRECTOR-IP-ADDRESS`: Enter the IP address of your BOSH Director VM.

    For example:

    <pre class="terminal">
    $ bosh alias-env gcp -e 10.0.0.3 --ca-cert /var/tempest/workspaces/default/root_ca_certificate
    </pre>

1. Log in to the BOSH Director VM using one of the following options:
  * [Internal User Store Login through UAA](#uaa-bosh): Log in to the BOSH Director VM using BOSH.
  * [External User Store Login through SAML](#saml-bosh): Use an external user store to log in to
    the BOSH Director VM.

#### <a id='uaa-bosh'></a> Log in to the BOSH Director VM with UAA

1. Retrieve the Director username and password in one of the following ways:
  * In <%= vars.ops_manager %>, click the BOSH Director, select the **Credentials** tab, and
    click the link to **Director Credentials**.
  * Browse to `https://FQDN/api/v0/deployed/director/credentials/director_credentials`
    to obtain the password, where `FQDN` is the fully qualified domain name of
    <%= vars.ops_manager %>.

1. Log in to the BOSH Director VM:

    ```console
    bosh -e MY-ENV log-in
    ```

    Where `MY-ENV` is the alias for your BOSH Director.

    For example:

    <pre class="terminal">
    $ bosh -e gcp log-in
    </pre>

    Follow the BOSH CLI prompts and enter the BOSH Director credentials to log in to the BOSH
    Director VM.

#### <a id='saml-bosh'></a> Log in to the BOSH Director VM with SAML

1. Log in to your identity provider and use the following information to configure SAML Service
Provider Properties:
  * **Service Provider Entity ID:** `bosh-uaa`
  * **ACS URL:** `https://DIRECTOR-IP-ADDRESS:8443/saml/SSO/alias/bosh-uaa`
  * **Binding:** HTTP Post
  * **SLO URL:** `https://DIRECTOR-IP-ADDRESS:8443/saml/SSO/alias/bosh-uaa`
  * **Binding:** HTTP Redirect
  * **Name ID:** Email Address

1. Log in to the BOSH Director VM:

    ```console
    bosh -e MY-ENV log-in
    ```

    Where `MY-ENV` is the alias for your BOSH Director.

    For example:

    <pre class="terminal">
    $ bosh -e gcp log-in
    </pre>

    Follow the BOSH CLI prompts and enter your SAML credentials to log in to the BOSH Director VM.

    <p> Your browser must be able to reach the BOSH Director to
    log in with SAML.</p>

1. Click **Log in with organization credentials (SAML)**. A temporary authentication code appears.

    ![alt-text=""](images/login-saml-credentials.png)

2. Copy the **Temporary Authentication Code** that appears in your browser.

    ![alt-text=""](images/saml-login-temp-auth-code.png)

3. You see a login confirmation. For example:

    <pre class="terminal">
    Logged in as admin@example.org
    </pre>

## <a id='bosh-director-ssh'></a> SSH into the BOSH Director VM

<%= partial "../common/ssh-to-bosh" %>

## <a id='cli'></a> Use the BOSH CLI for troubleshooting

This section describes three BOSH CLI commands commonly used during troubleshooting.

* **VMs:** Lists the VMs in a deployment.
* **Cloud Check:** Runs a cloud consistency check and interactive repair.
* **SSH:** Starts an interactive session or executes commands with a VM.

### <a id='vms'></a> BOSH VMs

The `bosh vms` command provides an overview of the virtual machines that BOSH manages.

To use this command, run `bosh -e MY-ENV vms` to see an overview of all virtual machines managed by
BOSH, or `bosh -e MY-ENV -d MY-DEPLOYMENT vms` to see only the virtual machines associated with a
particular deployment. Replace `MY-ENV` with your environment, and, if using the `-d` flag, also
replace `MY-DEPLOYMENT` with the name of a deployment.

When you troubleshoot an issue with your deployment, `bosh vms` might show a VM in
an **unknown** state.
Run [bosh <%= vars.bosh_cloud_check %>](#cck) on a VM in an **unknown** state to instruct BOSH to
diagnose problems with the VM.

You can also run `bosh vms` to identify VMs in your deployment, then use the
[bosh ssh](#ssh) command to log in to an identified VM with SSH for further
troubleshooting.

`bosh vms` supports the following arguments:

* `--dns`: Report also includes the DNS A record for each VM.

* `--vitals`: Report also includes load, CPU, memory usage, swap usage, system disk usage,
  ephemeral disk usage, and persistent disk usage for each VM.

  <p> The <strong>Status</strong> tab of the
  <%= vars.app_runtime_abbr %> tile shows information similar to the
  <code>bosh vms</code> output.</p>

### <a id='cck'></a> BOSH Cloud check

Run the `bosh <%= vars.bosh_cloud_check %>` command to instruct BOSH to detect differences
between the VM state database maintained by the BOSH Director and the actual
state of the VMs. For each difference detected, `bosh <%= vars.bosh_cloud_check %>` can offer the
following repair options:

* `Reboot VM`: Instructs BOSH to reboot a VM. Rebooting can resolve many transient errors.

* `Ignore problem`: Instructs BOSH to do nothing. You may want to ignore a problem ands instead run `bosh ssh` in an attempt to troubleshoot directly on the machine.

* `Reassociate VM with corresponding instance`: Updates the BOSH Director state database. Use this option if you believe that the BOSH Director state database is in error and that a VM is correctly associated with a job.

* `Recreate VM using last known apply spec`: Instructs BOSH to destroy the server and recreate it from the deployment manifest that the installer provides. Use this option if a VM is corrupted.

* `Delete VM reference`: Instructs BOSH to delete a VM reference in the Director state database. If a VM reference exists in the state database, BOSH expects to find an agent running on the VM. Select this option only if you know that this reference is in error. Once you delete the VM reference, BOSH can no longer control the VM.

To use this command, run `bosh -e MY-ENV -d MY-DEPLOYMENT <%= vars.bosh_cloud_check %>`, where `MY-ENV` is your environment, and `MY-DEPLOYMENT` is your deployment.

#### Example scenarios

**Unresponsive Agent**

<pre class="terminal">
$ bosh -e example-env -d example-deployment <%= vars.bosh_cloud_check %></pre>

ccdb/0 (vm-3e37133c-bc33-450e-98b1-f86d5b63502a) is not responding:

* Ignore problem
* Reboot VM
* Recreate VM using last known apply spec
* Delete VM reference (DANGEROUS!)

**Missing VM**

<pre class="terminal">
$ bosh -e example-env -d example-deployment <%= vars.bosh_cloud_check %></pre>
VM with cloud ID `vm-3e37133c-bc33-450e-98b1-f86d5b63502a' missing:

- Ignore problem
- Recreate VM using last known apply spec
- Delete VM reference (DANGEROUS!)

**Unbound Instance VM**

<pre class="terminal">
$ bosh -e example-env -d example-deployment <%= vars.bosh_cloud_check %> </pre>
VM `vm-3e37133c-bc33-450e-98b1-f86d5b63502a' reports itself as `ccdb/0' but does not have a bound instance:

- Ignore problem
- Delete VM (unless it has persistent disk)
- Reassociate VM with corresponding instance

**Out of Sync VM**

<pre class="terminal">
$ bosh -e example-env -d example-deployment <%= vars.bosh_cloud_check %> </pre>

VM `vm-3e37133c-bc33-450e-98b1-f86d5b63502a' is out of sync:
expected `cf-d7293430724a2c421061: ccdb/0', got `cf-d7293430724a2c421061: nats/0':

- Ignore problem
- Delete VM (unless it has persistent disk)

### <a id='recover'></a> BOSH Recover

For scenarios where underlying infrastructure issues cause widespread problems with a deployment, the `bosh recover` command may be useful.  The underlying machinery is very similar to `bosh <%= vars.bosh_cloud_check %>`, with several exceptions:
1. There is a 2-step process: `bosh create-recovery-plan` scans the deployment for problems and then prompts the user to generate a recovery plan, which is saved to a file. The `bosh recover` command consumes that file.
1. Resolutions to problems are selected by instance group and problem type. The `bosh cloud-check` command asks for a resolution for each particular problem.
1. When generating a recovery plan, `max_in_flight` can be overriden per instance group. This can be handy to speed deployment recovery. The `bosh cloud-check` command uses the `max_in_flight` values in the deployment manfiest.

The commands are
<pre class="terminal">
$ bosh -e example-env -d example-deployment create-recovery plan example-recovery-plan.yml</pre>
and
<pre class="terminal">
$ bosh -e example-env -d example-deployment recover example-recovery-plan.yml</pre>

See [Deployment Recovery](https://bosh.io/docs/recover/) for more details.

### <a id='bosh-ssh'></a> BOSH SSH

Use `bosh ssh` to log in to the VMs in your deployment with SSH.

To use `bosh ssh`:

1. Identify a VM to log in to with SSH. Run the following command to list the VMs
in the given deployment:

    ```console
    bosh -e MY-ENV -d MY-DEPLOYMENT vms
    ```

    Where:

    - `MY-ENV` is your environment alias.
    - `MY-DEPLOYMENT` is the deployment name.

1. Run:

    ```console
    bosh -e MY-ENV -d MY-DEPLOYMENT ssh VM-NAME/GUID`
    ```

    For example:

    <pre class="terminal">
    $ bosh -e example-env -d example-deployment ssh diego-cell/abcd0123-a012-b345-c678-9def01234567
    </pre>
